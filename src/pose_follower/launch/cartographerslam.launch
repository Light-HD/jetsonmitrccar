 
<launch>
  <!-- 
  NOTE: You'll need to bring up something that publishes sensor data (see
  rosstage), something that publishes a map (see map_server), and something to
  visualize a costmap (see nav_view), to see things work.
  Also, on a real robot, you'd want to set the "use_sim_time" parameter to false, or just not set it.
  -->

  <!--False for "six_wheel" or True for "four_wheel"  -->
  <arg name="is_four_wd" default="true"  />

  <!-- True if running simulation, not the real car -->
  <arg name="is_simulation" default="true" />

  <!-- Select Real Hardware Sensors to Enable -->
  <arg name="wheel_odometry" default="true"  />
  <arg name="imu_odometry" default="true"  />
  <arg name="laser_scanner_odometry" default="true"  />

<!-- Odometry, Static Transforms -->
     <include file="$(find odometry_agent)/launch/odometry_agent.launch">
        <arg name="is_simulation" value="$(arg is_simulation)" />
        <arg name="is_four_wd" value="$(arg is_four_wd)" />
        <arg name="wheel_odometry" value="$(arg wheel_odometry)" />
        <arg name="imu_odometry" value="$(arg imu_odometry)" />
        <arg name="laser_scanner_odometry" value="$(arg laser_scanner_odometry)" />
    </include>

  <!-- Launch Twist to Steerforce converter -->
<!--   <group if="$(arg is_four_wd)">
    <group if="$(arg is_simulation)">
      <include file="$(find steerforce_conv)/launch/steerforce_converter.launch"/>
    </group>
  </group> -->
  <!-- Load SLAMs or Static Map -->
  
  <!-- Hector SLAM -->
   <!--   <include file="$(find odometry_agent)/launch/hector_configuration.launch">
        <arg name="scan_topic_name" value="scan"/>
    </include> -->

  <!-- Cartographer SLAM  -->
  <include file="$(find cartographer_ros)/launch/cartographer_start.launch"/>  
  
    <node name="rviz" pkg="rviz" type="rviz" required="true"
      args="-d $(find cartographer_ros)/configuration_files/demo_3d.rviz" /> 
    
</launch>

