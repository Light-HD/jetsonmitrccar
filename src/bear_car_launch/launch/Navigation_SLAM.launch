 
<launch>
  <!-- 
  NOTE: You'll need to bring up something that publishes sensor data (see
  rosstage), something that publishes a map (see map_server), and something to
  visualize a costmap (see nav_view), to see things work.
  Also, on a real robot, you'd want to set the "use_sim_time" parameter to false, or just not set it.
  -->
  <!-- True if running simulation, not the real car -->
  <arg name="is_simulation" default="false" />
  <!-- Use Static Map & disable Static map -->
  <arg name="enable_staticmap" default="true" />

<!-- Load SLAMs or Static Map -->
  
  <!-- Hector SLAM -->
  <!-- <group unless="$(arg enable_staticmap)">
    <include file="$(find bear_car_launch)/launch/hector_slam/hector_configuration.launch">
      <arg name="scan_topic_name" value="scan"/>
    </include>
  </group>
 -->

  <!-- Cartographer SLAM  -->
    <group unless="$(arg enable_staticmap)">
      <include file="$(find bear_car_launch)/launch/cartographer_slam/cartographer_start.launch" />  
    </group>
    
  
  <!-- Use Static Map -->
  <group if="$(arg enable_staticmap)">
      <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom"
        args="0.0 0 0.0 0 0 0 /map /odom"/>
      <arg name="map_file" value="$(find bear_car_launch)/static_maps/track_no_obs.yaml" /> 
      <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_file)" />
    </group>
    


<!-- Load move_base or locomotor -->
  <!-- Select MoveBase for Navigation stack   -->
    <include file="$(find bear_car_launch)/launch/move_base/move_base_start.launch" /> 
      <param name="controller_frequency" value="100"  /> 

  <!-- Select Locomotor for Navigation stack   -->
    <!-- <include file="$(find bear_car_launch)/launch/locomotor/locomotor_start.launch" /> -->


  <!-- multigoal loading -->
    <include file="$(find multi_goal)/launch/multi_goal.launch" /> 
    
</launch>

